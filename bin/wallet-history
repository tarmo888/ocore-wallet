#!/usr/bin/env node

var _ = require('lodash');
var fs = require('fs');
var moment = require('moment');
var program = require('commander');
var utils = require('./cli-utils');
program = utils.configureCommander(program);

program
  .option('-a, --asset <asset>', 'asset unit')
  .option('-r, --rowid <rowid>', 'row id start from')
  .parse(process.argv);

var args = program.args;
var opts = {};

if (program.asset) {
  opts.asset = program.asset;
}

if (program.rowid) {
  opts.lastRowId = program.rowid;
}

utils.getClient(program, { mustExist: true }, function (client) {
  client.getTxHistory(opts, function (err, txs) {
    if (_.isEmpty(txs))
      return;

    console.log("* TX History:")
    console.log(txs)

    _.each(txs, function(tx) {
      var time = moment(parseInt(tx.time) * 1000).fromNow();
      var amount = utils.renderAmount(tx.amount, opts.asset);
      var confirmations = tx.stable ? 'stable' : 'pending';
      var proposal = tx.proposalId ? '["' + tx.message + '" by ' + tx.creatorName + '] ' : '';
      switch (tx.action) {
        case 'received':
          direction = '<=';
        break;
        case 'moved':
          direction = '==';
        break;
        case 'sent':
          direction = '=>';
        break;
      }

      console.log("  %s: [%s] %s %s %s %s (%s) (%s)", time, tx.unit, direction, tx.action, amount, proposal, confirmations, tx.rowid);
    });
  });
});
